name: Plugin-publish

on: [ push, workflow_dispatch ]

permissions:
  contents: read

jobs:
  publish:
    runs-on: ubuntu-latest

    outputs:
      PLUGIN_NAME: ${{ steps.plugin-name.outputs.info }}
      PLUGIN_VERSION: ${{ steps.plugin-version.outputs.info }}
      ASF_VERSION: ${{ steps.asf-version.outputs.info }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.2
        with:
          show-progress: false
          submodules: recursive

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v4.3.1
        with:
          dotnet-version: 9.0

      - name: Verify .NET Core
        run: dotnet --info

      - name: Parse plugin name from Directory.Build.props
        id: plugin-name
        uses: mavrosxristoforos/get-xml-info@2.0
        with:
          xml-file: "Directory.Build.props"
          xpath: "//PluginName"

      - name: Parse plugin version from Directory.Build.props
        id: plugin-version
        uses: mavrosxristoforos/get-xml-info@2.0
        with:
          xml-file: "Directory.Build.props"
          xpath: "//Version"

      - name: Parse ASF version from Directory.Build.props
        id: asf-version
        uses: mavrosxristoforos/get-xml-info@2.0
        with:
          xml-file: "ArchiSteamFarm/Directory.Build.props"
          xpath: "//Version"

      - name: Publish plugin on Unix
        env:
          PLUGIN_NAME: ${{ steps.plugin-name.outputs.info }}
        shell: sh
        run: |
          set -eu

          dotnet publish "$PLUGIN_NAME" -c Release -o "out/plugin/${PLUGIN_NAME}" -p:ContinuousIntegrationBuild=true -p:TargetLatestRuntimePatch=false -p:UseAppHost=false --nologo

          seven_zip_args="-mx=9 -mfb=258 -mpass=15"
          zip_args="-9"

          if command -v 7z >/dev/null; then
            7z a -bd -slp -tzip -mm=Deflate $seven_zip_args "out/${PLUGIN_NAME}.zip" "${GITHUB_WORKSPACE}/out/plugin/${PLUGIN_NAME}/*"
          else
          (
            cd "${GITHUB_WORKSPACE}/out/plugin/${PLUGIN_NAME}"
            zip -q -r $zip_args "../../${PLUGIN_NAME}.zip" .
          )
          fi

      - name: Upload plugin artifact
        uses: actions/upload-artifact@v4.6.2
        with:
          if-no-files-found: error
          name: ${{ steps.plugin-name.outputs.info }}
          path: out/${{ steps.plugin-name.outputs.info }}.zip

  release:
    needs: publish
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.2
        with:
          show-progress: false

      - name: Download plugin artifact from ubuntu-latest
        uses: actions/download-artifact@v4.3.0
        with:
          name: ${{ needs.publish.outputs.PLUGIN_NAME }}
          path: out

      - name: Create GitHub release
        uses: ncipollo/release-action@v1.16.0
        with:
          allowUpdates: true
          artifactErrorsFailBuild: true
          omitBodyDuringUpdate: true
          tag: ${{ needs.publish.outputs.PLUGIN_VERSION }}
          name: ${{ needs.publish.outputs.PLUGIN_NAME }} v${{ needs.publish.outputs.PLUGIN_VERSION }}
          body: This version requires ArchiSteamFarm v${{ needs.publish.outputs.ASF_VERSION }} or newer.
          artifacts: "out/*"
